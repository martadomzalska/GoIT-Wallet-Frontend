{"version":3,"file":"static/js/385.61be8e53.chunk.js","mappings":"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","sources":["webpack://wallet/./src/components/BackgroundContainer/BackgroundContainer.module.css?96c2","components/BackgroundContainer/BackgroundContainer.jsx","redux/currency/selectors.js","webpack://wallet/./src/components/Currency/Currency.module.scss?28ef","components/Currency/Currency.jsx","webpack://wallet/./src/components/NavBalanceCurrency/NavBalanceCurrency.module.css?9eae","webpack://wallet/./src/components/Balance/Balance.module.css?b75c","components/Balance/Balance.jsx","components/NavBalanceCurrency/NavBalanceCurrency.jsx","webpack://wallet/./src/components/Navigation/Navigation.module.css?4bf2","components/Navigation/Navigation.jsx","webpack://wallet/./src/components/ButtonAddTransaction/ButtonAddTransaction.module.css?ecac","webpack://wallet/./src/components/ModalAddTransaction/ModalAddTransaction.module.css?40ee","components/ModalAddTransaction/validationSchema.js","components/ModalAddTransaction/ModalAddTransaction.jsx","components/ButtonAddTransaction/ButtonAddTransaction.jsx","webpack://wallet/./src/pages/HomePage/HomePage.module.css?5baa","webpack://wallet/./src/components/HomeTab/HomeTab.module.css?15f0","webpack://wallet/./src/components/ModalEditTransaction/ModalEditTransaction.module.css?dc68","components/ModalEditTransaction/ModalEditTransaction.jsx","webpack://wallet/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","components/HomeTab/HomeTab.jsx","pages/HomePage/HomePage.jsx","redux/categories/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerAll\":\"BackgroundContainer_containerAll__VmaRx\",\"container\":\"BackgroundContainer_container__mNblx\",\"mobile\":\"BackgroundContainer_mobile__K7gPD\",\"tablet\":\"BackgroundContainer_tablet__hewMm\",\"desktop\":\"BackgroundContainer_desktop__NMoAX\",\"background\":\"BackgroundContainer_background__xUlXo\",\"backgroundTablet\":\"BackgroundContainer_backgroundTablet__Zcs5v\",\"backgroundDesktop\":\"BackgroundContainer_backgroundDesktop__5XBsB\"};","import React from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport css from './BackgroundContainer.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const BackgroundContainer = ({ children }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 768 });\r\n  const isTablet = useMediaQuery({ minWidth: 769, maxWidth: 1279 });\r\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\r\n\r\n  let containerStyle = css.container;\r\n  let backgroundStyle = css.background;\r\n\r\n  if (isDesktop) {\r\n    containerStyle += ` ${css.desktop}`;\r\n    backgroundStyle += ` ${css.backgroundDesktop}`;\r\n  } else if (isTablet) {\r\n    containerStyle += ` ${css.tablet}`;\r\n    backgroundStyle += ` ${css.backgroundTablet}`;\r\n  } else if (isMobile) {\r\n    containerStyle += ` ${css.mobile}`;\r\n  }\r\n\r\n  return (\r\n    <div className={css.containerAll}>\r\n      <div className={backgroundStyle}> </div>\r\n      <div className={containerStyle}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBackgroundContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","\r\nexport const selectIsError = state => state.currency.isError;\r\nexport const selectCurrency = state => state.currency.data;\r\nexport const selectLastFetchDate = state => state.currency.lastFetchDate;","// extracted by mini-css-extract-plugin\nexport default {\"Currency__container\":\"Currency_Currency__container__rSML5\",\"Currency__bgGraph\":\"Currency_Currency__bgGraph__WjX6U\",\"Currency__row_selected\":\"Currency_Currency__row_selected__bs+Ae\",\"Currency__spinnerContainer\":\"Currency_Currency__spinnerContainer__xhXvm\",\"Currency__spinner\":\"Currency_Currency__spinner__ma5Ew\",\"Currency__table\":\"Currency_Currency__table__kmI5h\"};","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchCurrency } from '../../redux/currency/thunk';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  selectIsError,\r\n  selectCurrency,\r\n  selectLastFetchDate,\r\n} from '../../redux/currency/selectors';\r\nimport styles from './Currency.module.scss';\r\n\r\nexport const Currency = () => {\r\n  const dispatch = useDispatch();\r\n  const currency = useSelector(selectCurrency);\r\n  const isError = useSelector(selectIsError);\r\n  const lastFetchDate = useSelector(selectLastFetchDate);\r\n\r\n  useEffect(() => {\r\n    if (!currency.length) {\r\n      dispatch(fetchCurrency());\r\n    } else {\r\n      const timeDiff = Date.now() - lastFetchDate;\r\n      if (timeDiff > 1000 * 60 * 60) {\r\n        dispatch(fetchCurrency());\r\n      }\r\n    }\r\n  }, [currency, dispatch, lastFetchDate]);\r\n\r\n  return (\r\n    <>\r\n      {isError && <p>{isError[0]}</p>}\r\n      <div className={styles.Currency__container}>\r\n        <div className={styles.Currency__bgGraph} />\r\n        \r\n        {!isError && (\r\n          <table className={styles.Currency__table}>\r\n            <thead>\r\n              <tr>\r\n                <th>Currency</th>\r\n                <th data-type=\"bid\">Purchase</th>\r\n                <th data-type=\"ask\">Sale</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {currency?.map(currency => (\r\n                <tr\r\n                  key={currency.code}\r\n                  onClick={event =>\r\n                    event.currentTarget.classList.toggle(\r\n                      styles.Currency__row_selected\r\n                    )\r\n                  }\r\n                >\r\n                  <td>{currency.code}</td>\r\n                  <td data-type=\"bid\">{currency.bid.toFixed(4)}</td>\r\n                  <td data-type=\"ask\">{currency.ask.toFixed(4)}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NavBalanceCurrency_container__260j2\",\"desktop\":\"NavBalanceCurrency_desktop__j129s\",\"tablet\":\"NavBalanceCurrency_tablet__YlQLF\",\"mobile\":\"NavBalanceCurrency_mobile__rvPk4\",\"navBalance\":\"NavBalanceCurrency_navBalance__f02Rj\",\"navBalanceMobile\":\"NavBalanceCurrency_navBalanceMobile__YgFF8\",\"navBalanceTablet\":\"NavBalanceCurrency_navBalanceTablet__pYFHG\",\"navBalanceDesktop\":\"NavBalanceCurrency_navBalanceDesktop__laBeQ\",\"currencyTablet\":\"NavBalanceCurrency_currencyTablet__CPr-R\",\"currencyMobile\":\"NavBalanceCurrency_currencyMobile__ub1vh\"};","// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__kAwRX\",\"balance__text\":\"Balance_balance__text__pUfL6\",\"balance__amount\":\"Balance_balance__amount__FOH9a\",\"balance__currency\":\"Balance_balance__currency__Oy+dn\"};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectBalance } from '../../redux/transactions/selectors';\r\nimport styles from './Balance.module.css';\r\n\r\nexport function Balance() {\r\n  const balance = useSelector(selectBalance);\r\n  console.log('Balance from selector:', balance);\r\n  const displayBalance = !isNaN(parseFloat(balance))\r\n    ? parseFloat(balance).toFixed(2)\r\n    : '0.00';\r\n\r\n  return (\r\n    <div className={styles.balance}>\r\n      <div className={styles.balance__text}>Your balance</div>\r\n      <div className={styles.balance__amount}>\r\n        <span className={styles.balance__currency}>PLN</span>\r\n        {displayBalance}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllTransactions } from 'redux/transactions/operations';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport css from './NavBalanceCurrency.module.css';\r\nimport { Navigation } from 'components/Navigation/Navigation';\r\nimport { Currency } from 'components/Currency/Currency';\r\nimport { Balance } from 'components/Balance/Balance';\r\n\r\nexport const NavBalanceCurrency = () => {\r\n  const isMobile = useMediaQuery({ maxWidth: 768 });\r\n  const isTablet = useMediaQuery({ minWidth: 769, maxWidth: 1279 });\r\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllTransactions());\r\n  }, [dispatch]);\r\n\r\n  let containerStyle = css.container;\r\n  let navBalanceStyle = css.navBalance;\r\n  let currencyStyle;\r\n\r\n  if (isDesktop) {\r\n    containerStyle += ` ${css.desktop}`;\r\n    navBalanceStyle += ` ${css.navBalanceDesktop}`;\r\n  } else if (isTablet) {\r\n    containerStyle += ` ${css.tablet}`;\r\n    navBalanceStyle += ` ${css.navBalanceTablet}`;\r\n    currencyStyle = ` ${css.currencyTablet}`;\r\n  } else if (isMobile) {\r\n    containerStyle += ` ${css.mobile}`;\r\n    currencyStyle = ` ${css.currencyMobile}`;\r\n    navBalanceStyle += ` ${css.navBalanceMobile}`;\r\n  }\r\n  return (\r\n    <div className={containerStyle}>\r\n      <div className={navBalanceStyle}>\r\n        <Navigation />\r\n        <Balance />\r\n      </div>\r\n      <div className={currencyStyle}>\r\n        <Currency />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"navigation\":\"Navigation_navigation__+DN70\",\"navigation__item\":\"Navigation_navigation__item__9ATd9\",\"navigation__icon_display\":\"Navigation_navigation__icon_display__QHIaH\",\"navigation__item_currency\":\"Navigation_navigation__item_currency__TzfYt\",\"navigation__item_home\":\"Navigation_navigation__item_home__sBTN6\",\"navigation__item_stats\":\"Navigation_navigation__item_stats__vmVq3\",\"navigation__item_blue\":\"Navigation_navigation__item_blue__wdfv6\"};","import { AiFillHome } from 'react-icons/ai';\r\nimport { BiStats } from 'react-icons/bi';\r\nimport { PiCurrencyDollarSimpleBold } from 'react-icons/pi';\r\nimport styled from 'styled-components';\r\nimport styles from './Navigation.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Link = styled(NavLink)`\r\n  &.active {\r\n    font-weight: 700;\r\n\r\n    div div {\r\n      background-color: #4a56e2;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Navigation = () => {\r\n  return (\r\n    <div className={styles.navigation}>\r\n      <Link to=\"/home\">\r\n        <div className={styles.navigation__icon_display}>\r\n          <div className={styles.navigation__item}>\r\n            <AiFillHome />\r\n          </div>\r\n          <div className={styles.navigation__item_home}>Home</div>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/diagram\">\r\n        <div className={styles.navigation__icon_display}>\r\n          <div className={styles.navigation__item}>\r\n            <BiStats />\r\n          </div>\r\n          <div className={styles.navigation__item_stats}>Statistics</div>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/currency\">\r\n        <div>\r\n          <div className={styles.navigation__item_currency}>\r\n            <PiCurrencyDollarSimpleBold />\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ButtonAddTransaction_button__k2T6o\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"ModalAddTransaction_modalOverlay__W6tUK\",\"modal\":\"ModalAddTransaction_modal__nw6+Y\",\"closeButton\":\"ModalAddTransaction_closeButton__lDApu\",\"modalContent\":\"ModalAddTransaction_modalContent__msS5s\",\"headline\":\"ModalAddTransaction_headline__qCRgi\",\"rangeContainer\":\"ModalAddTransaction_rangeContainer__OWjG7\",\"rangeContainerExpense\":\"ModalAddTransaction_rangeContainerExpense__Knkkr\",\"income\":\"ModalAddTransaction_income__w1TsD\",\"expense\":\"ModalAddTransaction_expense__Upfkk\",\"nohighlight\":\"ModalAddTransaction_nohighlight__xfmmm\",\"toggleButton\":\"ModalAddTransaction_toggleButton__IFVPw\",\"toggleButtonIncome\":\"ModalAddTransaction_toggleButtonIncome__a7DqU\",\"toggleButtonExpense\":\"ModalAddTransaction_toggleButtonExpense__NyX+z\",\"toggleButtonInput\":\"ModalAddTransaction_toggleButtonInput__r+fug\",\"range\":\"ModalAddTransaction_range__44PSJ\",\"categoryWrapper\":\"ModalAddTransaction_categoryWrapper__iRCIg\",\"category\":\"ModalAddTransaction_category__az7f6\",\"form\":\"ModalAddTransaction_form__ACW1k\",\"sumLabel\":\"ModalAddTransaction_sumLabel__U1842\",\"sumInput\":\"ModalAddTransaction_sumInput__DMmcN\",\"comment\":\"ModalAddTransaction_comment__TLW07\",\"addBtn\":\"ModalAddTransaction_addBtn__i4bJV\",\"closeBtn\":\"ModalAddTransaction_closeBtn__u+mnh\",\"dateLabel\":\"ModalAddTransaction_dateLabel__4lXQT\",\"dateContainer\":\"ModalAddTransaction_dateContainer__fOfBX\",\"selectCategory\":\"ModalAddTransaction_selectCategory__VoSKX\",\"formikMessage\":\"ModalAddTransaction_formikMessage__B96lG\",\"formikMessageRequired\":\"ModalAddTransaction_formikMessageRequired__iec+Z\",\"formikMessageData\":\"ModalAddTransaction_formikMessageData__3VFTl\",\"error\":\"ModalAddTransaction_error__xi6dI\",\"modalExpense\":\"ModalAddTransaction_modalExpense__pglPl\"};","import * as Yup from 'yup';\r\n\r\nconst today = new Date();\r\nconst todayEnd = new Date(today.setHours(23, 59, 59, 999));\r\n\r\nexport const transactionValidationSchema = Yup.object({\r\n  amount: Yup.number()\r\n    .required('Required!')\r\n    .positive('Amount must be positive')\r\n    .max(1000000, 'Amount must be less or equal to 1000000'),\r\n  date: Yup.date().required('Required!').max(todayEnd, 'Past or present'),\r\n  type: Yup.string()\r\n    .required('Required!')\r\n    .oneOf(['income', 'expense'], 'Invalid transaction type'),\r\n  comment: Yup.string().nullable(),\r\n  category: Yup.string().required('Required!'),\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Datetime from 'react-datetime';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport css from './ModalAddTransaction.module.css';\r\nimport { selectCategories } from 'redux/categories/selectors';\r\nimport { useFormik } from 'formik';\r\nimport { transactionValidationSchema } from './validationSchema';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTransaction } from 'redux/transactions/operations';\r\nimport { getAllTransactions } from '../../redux/transactions/operations';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const ModalAddTransaction = ({ isOpen, onClose }) => {\r\n  const animation = useSpring({\r\n    transform: isOpen ? 'scale(1)' : 'scale(0)',\r\n    opacity: isOpen ? 1 : 0,\r\n    visibility: isOpen ? 'visible' : 'hidden',\r\n    config: { duration: 300 },\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectCategories);\r\n\r\n  const [isIncome, setIsIncome] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      type: isIncome ? 'income' : 'expense',\r\n      category: '',\r\n      amount: '',\r\n      date: new Date(),\r\n      comment: '',\r\n    },\r\n    validationSchema: transactionValidationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      console.log(values);\r\n      const transaction = {\r\n        type: isIncome ? 'income' : 'expense',\r\n        category: isIncome ? '1' : values.category,\r\n        amount: values.amount,\r\n        date: values.date,\r\n        comment: values.comment,\r\n      };\r\n\r\n      dispatch(addTransaction(transaction))\r\n        .unwrap()\r\n        .then(() => {\r\n          resetForm();\r\n          onClose();\r\n          toast.success('Transaction added successfully');\r\n        })\r\n        .then(() => {\r\n          dispatch(getAllTransactions());\r\n        })\r\n        .catch(rejectedValueOrSerializedError => {\r\n          console.error(rejectedValueOrSerializedError);\r\n          toast.error(rejectedValueOrSerializedError);\r\n        });\r\n    },\r\n  });\r\n\r\n  const handleCheckboxChange = e => {\r\n    setIsIncome(e.target.checked);\r\n    formik.setFieldValue('category', e.target.checked ? '1' : '');\r\n  };\r\n\r\n  const handleCategoryChange = e => {\r\n    const newCategory = e.target.value;\r\n    formik.setFieldValue('category', newCategory);\r\n  };\r\n\r\n  const handleDataChange = date => {\r\n    const formattedDate = date ? date.toDate() : null;\r\n    setSelectedDate(formattedDate);\r\n    formik.setFieldValue('date', formattedDate);\r\n  };\r\n\r\n  const handleClose = e => {\r\n    if (e.target.id === 'modalBackdrop') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      window.addEventListener('keydown', handleKeyDown);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [isOpen, onClose]);\r\n\r\n  //income/expense checkbox\r\n\r\n  //calendar\r\n  const renderInput = props => {\r\n    return (\r\n      <div className={css.dateContainer} style={{ position: 'relative' }}>\r\n        <input className={css.dateInput} {...props} />\r\n        <svg\r\n          className={css.calendarIcon}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n        >\r\n          <g clipPath=\"url(#clip0_7_312)\">\r\n            <path\r\n              d=\"M9 11H7V13H9V11ZM13 11H11V13H13V11ZM17 11H15V13H17V11ZM19 4H18V2H16V4H8V2H6V4H5C3.89 4 3.01 4.9 3.01 6L3 20C3 21.1 3.89 22 5 22H19C20.1 22 21 21.1 21 20V6C21 4.9 20.1 4 19 4ZM19 20H5V9H19V20Z\"\r\n              fill=\"#4A56E2\"\r\n            />\r\n          </g>\r\n          <defs>\r\n            <clipPath id=\"clip0_7_312\">\r\n              <rect width=\"24\" height=\"24\" fill=\"white\" />\r\n            </clipPath>\r\n          </defs>\r\n        </svg>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <animated.div\r\n      style={animation}\r\n      id=\"modalBackdrop\"\r\n      className={css.modalOverlay}\r\n      onClick={handleClose}\r\n    >\r\n      <div\r\n        className={isIncome ? css.modal : `${css.modal} ${css.modalExpense}`}\r\n      >\r\n        <div className={css.modalContent}>\r\n          <button className={css.closeButton} onClick={onClose}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 18 18\"\r\n              fill=\"none\"\r\n            >\r\n              <path d=\"M1 1L17 17\" stroke=\"black\" />\r\n              <path d=\"M1 17L17 0.999999\" stroke=\"black\" />\r\n            </svg>\r\n          </button>\r\n          <p className={css.headline}>Add Transaction</p>\r\n          <form className={css.form} onSubmit={formik.handleSubmit}>\r\n            <label className={css.toggleButtonLabel}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={isIncome}\r\n                onChange={handleCheckboxChange}\r\n                className={css.toggleButtonInput}\r\n                name=\"type\"\r\n              />\r\n              <div className={css.toggleButton}>\r\n                {isIncome ? (\r\n                  <svg\r\n                    className={css.toggleButtonIncome}\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"74\"\r\n                    height=\"74\"\r\n                    viewBox=\"0 0 74 74\"\r\n                    fill=\"none\"\r\n                  >\r\n                    <g filter=\"url(#filter0_d_19664_746)\">\r\n                      <circle cx=\"37\" cy=\"31\" r=\"22\" fill=\"#24CCA7\" />\r\n                    </g>\r\n                    <path d=\"M37 21V41\" stroke=\"white\" strokeWidth=\"2\" />\r\n                    <path d=\"M27 31L47 31\" stroke=\"white\" strokeWidth=\"2\" />\r\n                    <defs>\r\n                      <filter\r\n                        id=\"filter0_d_19664_746\"\r\n                        x=\"0\"\r\n                        y=\"0\"\r\n                        width=\"74\"\r\n                        height=\"74\"\r\n                        filterUnits=\"userSpaceOnUse\"\r\n                        colorInterpolationFilters=\"sRGB\"\r\n                      >\r\n                        <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n                        <feColorMatrix\r\n                          in=\"SourceAlpha\"\r\n                          type=\"matrix\"\r\n                          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n                          result=\"hardAlpha\"\r\n                        />\r\n                        <feOffset dy=\"6\" />\r\n                        <feGaussianBlur stdDeviation=\"7.5\" />\r\n                        <feColorMatrix\r\n                          type=\"matrix\"\r\n                          values=\"0 0 0 0 0.141176 0 0 0 0 0.8 0 0 0 0 0.654902 0 0 0 0.5 0\"\r\n                        />\r\n                        <feBlend\r\n                          mode=\"normal\"\r\n                          in2=\"BackgroundImageFix\"\r\n                          result=\"effect1_dropShadow_19664_746\"\r\n                        />\r\n                        <feBlend\r\n                          mode=\"normal\"\r\n                          in=\"SourceGraphic\"\r\n                          in2=\"effect1_dropShadow_19664_746\"\r\n                          result=\"shape\"\r\n                        />\r\n                      </filter>\r\n                    </defs>\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    className={css.toggleButtonExpense}\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"74\"\r\n                    height=\"74\"\r\n                    viewBox=\"0 0 74 74\"\r\n                    fill=\"none\"\r\n                  >\r\n                    <g filter=\"url(#filter0_d_19664_1473)\">\r\n                      <circle cx=\"37\" cy=\"31\" r=\"22\" fill=\"#FF6596\" />\r\n                    </g>\r\n                    <path d=\"M27 31L47 31\" stroke=\"white\" strokeWidth=\"2\" />\r\n                    <defs>\r\n                      <filter\r\n                        id=\"filter0_d_19664_1473\"\r\n                        x=\"0\"\r\n                        y=\"0\"\r\n                        width=\"74\"\r\n                        height=\"74\"\r\n                        filterUnits=\"userSpaceOnUse\"\r\n                        colorInterpolationFilters=\"sRGB\"\r\n                      >\r\n                        <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n                        <feColorMatrix\r\n                          in=\"SourceAlpha\"\r\n                          type=\"matrix\"\r\n                          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n                          result=\"hardAlpha\"\r\n                        />\r\n                        <feOffset dy=\"6\" />\r\n                        <feGaussianBlur stdDeviation=\"7.5\" />\r\n                        <feColorMatrix\r\n                          type=\"matrix\"\r\n                          values=\"0 0 0 0 1 0 0 0 0 0.395833 0 0 0 0 0.589401 0 0 0 0.5 0\"\r\n                        />\r\n                        <feBlend\r\n                          mode=\"normal\"\r\n                          in2=\"BackgroundImageFix\"\r\n                          result=\"effect1_dropShadow_19664_1473\"\r\n                        />\r\n                        <feBlend\r\n                          mode=\"normal\"\r\n                          in=\"SourceGraphic\"\r\n                          in2=\"effect1_dropShadow_19664_1473\"\r\n                          result=\"shape\"\r\n                        />\r\n                      </filter>\r\n                    </defs>\r\n                  </svg>\r\n                )}\r\n              </div>\r\n            </label>\r\n            <div\r\n              className={\r\n                isIncome\r\n                  ? css.rangeContainer\r\n                  : `${css.rangeContainer} ${css.rangeContainerExpense}`\r\n              }\r\n            >\r\n              <span\r\n                className={\r\n                  isIncome ? css.income : `${css.income} ${css.nohighlight}`\r\n                }\r\n              >\r\n                Income\r\n              </span>\r\n\r\n              <span\r\n                className={\r\n                  isIncome ? `${css.expense} ${css.nohighlight}` : css.expense\r\n                }\r\n              >\r\n                Expense\r\n              </span>\r\n            </div>\r\n            {!isIncome ? (\r\n              <div className={css.categoryWrapper}>\r\n                <select\r\n                  className={`${css.category} ${\r\n                    formik.touched.category && formik.errors.category\r\n                      ? css.error\r\n                      : ''\r\n                  }`}\r\n                  name=\"category\"\r\n                  value={formik.values.category}\r\n                  onChange={handleCategoryChange}\r\n                  onBlur={formik.handleBlur}\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select a category\r\n                  </option>\r\n                  {categories.slice(1).map(cat => (\r\n                    <option key={cat.id} value={cat.id}>\r\n                      {cat.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {formik.touched.category && formik.errors.category && (\r\n                  <div className={css.formikMessageRequired}>\r\n                    {formik.errors.category}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : null}\r\n            <label className={css.sumLabel}>\r\n              <input\r\n                className={`${css.sumInput} ${\r\n                  formik.touched.amount && formik.errors.amount ? css.error : ''\r\n                }`}\r\n                type=\"number\"\r\n                placeholder=\"0.00\"\r\n                {...formik.getFieldProps('amount')}\r\n              />\r\n              {formik.touched.amount && formik.errors.amount && (\r\n                <div className={css.formikMessage}>{formik.errors.amount}</div>\r\n              )}\r\n            </label>\r\n            <label\r\n              className={`${css.dateLabel} ${\r\n                formik.touched.date && formik.errors.date ? css.error : ''\r\n              }`}\r\n            >\r\n              <Datetime\r\n                value={selectedDate}\r\n                onChange={handleDataChange}\r\n                renderInput={renderInput}\r\n                dateFormat=\"DD-MM-YYYY\"\r\n                timeFormat={false}\r\n                name=\"date\"\r\n                onBlur={formik.handleBlur}\r\n              />\r\n              {formik.touched.date && formik.errors.date && (\r\n                <div className={css.formikMessageData}>\r\n                  {formik.errors.date}\r\n                </div>\r\n              )}\r\n            </label>\r\n            <textarea\r\n              className={css.comment}\r\n              placeholder=\"Comment\"\r\n              {...formik.getFieldProps('comment')}\r\n            />\r\n            <button className={css.addBtn} type=\"submit\">\r\n              Add\r\n            </button>\r\n            <button className={css.closeBtn} onClick={onClose} type=\"button\">\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nModalAddTransaction.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport css from './ButtonAddTransaction.module.css';\r\nimport { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\r\nimport { toggleModalAddTransaction } from 'redux/global/slice';\r\nimport { selectIsModalAddTransaction } from 'redux/global/selectors';\r\n\r\nexport const ButtonAddTransaction = () => {\r\n  const dispatch = useDispatch();\r\n  const isModalAddTransaction = useSelector(selectIsModalAddTransaction);\r\n\r\n  const handleToggleModal = () => {\r\n    dispatch(toggleModalAddTransaction());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className={css.button} onClick={handleToggleModal}>\r\n        <svg\r\n          className={css.icon}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"74\"\r\n          height=\"73\"\r\n          viewBox=\"0 0 74 73\"\r\n          fill=\"none\"\r\n        >\r\n          <g filter=\"url(#filter0_d_7_35)\">\r\n            <circle cx=\"37\" cy=\"31\" r=\"22\" fill=\"#24CCA7\" />\r\n          </g>\r\n          <path d=\"M37 21V41\" stroke=\"white\" strokeWidth=\"2\" />\r\n          <path d=\"M27 31L47 31\" stroke=\"white\" strokeWidth=\"2\" />\r\n          <defs>\r\n            <filter\r\n              id=\"filter0_d_7_35\"\r\n              x=\"0\"\r\n              y=\"0\"\r\n              width=\"74\"\r\n              height=\"74\"\r\n              filterUnits=\"userSpaceOnUse\"\r\n              colorInterpolationFilters=\"sRGB\"\r\n            >\r\n              <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n              <feColorMatrix\r\n                in=\"SourceAlpha\"\r\n                type=\"matrix\"\r\n                values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n                result=\"hardAlpha\"\r\n              />\r\n              <feOffset dy=\"6\" />\r\n              <feGaussianBlur stdDeviation=\"7.5\" />\r\n              <feColorMatrix\r\n                type=\"matrix\"\r\n                values=\"0 0 0 0 0.141176 0 0 0 0 0.8 0 0 0 0 0.654902 0 0 0 0.5 0\"\r\n              />\r\n              <feBlend\r\n                mode=\"normal\"\r\n                in2=\"BackgroundImageFix\"\r\n                result=\"effect1_dropShadow_7_35\"\r\n              />\r\n              <feBlend\r\n                mode=\"normal\"\r\n                in=\"SourceGraphic\"\r\n                in2=\"effect1_dropShadow_7_35\"\r\n                result=\"shape\"\r\n              />\r\n            </filter>\r\n          </defs>\r\n        </svg>\r\n      </button>\r\n      <ModalAddTransaction\r\n        isOpen={isModalAddTransaction}\r\n        onClose={handleToggleModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"lineMobileTablet\":\"HomePage_lineMobileTablet__Nw0pv\",\"lineDesktop\":\"HomePage_lineDesktop__2VxD8\"};","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"HomeTab_table__-KI6G\",\"tableHead\":\"HomeTab_tableHead__yzO7A\",\"tableHeadRow\":\"HomeTab_tableHeadRow__yHZ7n\",\"tableHeadData\":\"HomeTab_tableHeadData__+bmqc\",\"tableBody\":\"HomeTab_tableBody__uxIdY\",\"tableBodyRow\":\"HomeTab_tableBodyRow__KGEW2\",\"tableBodyData\":\"HomeTab_tableBodyData__gcEls\",\"tableBodyDataPlus\":\"HomeTab_tableBodyDataPlus__sNpiv\",\"tableBodyDataMinus\":\"HomeTab_tableBodyDataMinus__OahLF\",\"buttonEdit\":\"HomeTab_buttonEdit__K+Nod\",\"button\":\"HomeTab_button__m+hGH\",\"mobileList\":\"HomeTab_mobileList__o0kuA\",\"mobileListPlus\":\"HomeTab_mobileListPlus__bPYQj\",\"mobileListItem\":\"HomeTab_mobileListItem__iv934\",\"mobileListCategory\":\"HomeTab_mobileListCategory__4RjMD\",\"mobileListData\":\"HomeTab_mobileListData__d0v0m\",\"mobileListDataPlus\":\"HomeTab_mobileListDataPlus__x1S-R\",\"mobileListDataMinus\":\"HomeTab_mobileListDataMinus__1wWjl\",\"deleteButton\":\"HomeTab_deleteButton__nvpXi\",\"editButton\":\"HomeTab_editButton__wapmI\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"ModalEditTransaction_modalOverlay__-UuiJ\",\"modal\":\"ModalEditTransaction_modal__bfg3v\",\"closeButton\":\"ModalEditTransaction_closeButton__ck8mH\",\"modalContent\":\"ModalEditTransaction_modalContent__lSglk\",\"headline\":\"ModalEditTransaction_headline__lB2Bp\",\"rangeContainer\":\"ModalEditTransaction_rangeContainer__JsiEv\",\"rangeContainerExpense\":\"ModalEditTransaction_rangeContainerExpense__YO7is\",\"income\":\"ModalEditTransaction_income__EiwHl\",\"expense\":\"ModalEditTransaction_expense__sDK1q\",\"nohighlight\":\"ModalEditTransaction_nohighlight__634HO\",\"toggleButton\":\"ModalEditTransaction_toggleButton__Ci3t1\",\"toggleButtonIncome\":\"ModalEditTransaction_toggleButtonIncome__zDswq\",\"toggleButtonExpense\":\"ModalEditTransaction_toggleButtonExpense__qmo4h\",\"toggleButtonInput\":\"ModalEditTransaction_toggleButtonInput__RbK-v\",\"range\":\"ModalEditTransaction_range__Cp+af\",\"categoryWrapper\":\"ModalEditTransaction_categoryWrapper__wA+4H\",\"category\":\"ModalEditTransaction_category__Gcgb9\",\"form\":\"ModalEditTransaction_form__Mkxte\",\"sumLabel\":\"ModalEditTransaction_sumLabel__-aeLX\",\"sumInput\":\"ModalEditTransaction_sumInput__Wur+K\",\"comment\":\"ModalEditTransaction_comment__S-aa4\",\"addBtn\":\"ModalEditTransaction_addBtn__9za9n\",\"closeBtn\":\"ModalEditTransaction_closeBtn__NuOGr\",\"dateLabel\":\"ModalEditTransaction_dateLabel__X0eil\",\"dateContainer\":\"ModalEditTransaction_dateContainer__0zY93\",\"selectCategory\":\"ModalEditTransaction_selectCategory__AxWF+\",\"formikMessage\":\"ModalEditTransaction_formikMessage__n-WjY\",\"formikMessageRequired\":\"ModalEditTransaction_formikMessageRequired__fxfll\",\"formikMessageData\":\"ModalEditTransaction_formikMessageData__X8goE\",\"error\":\"ModalEditTransaction_error__I6FJ2\",\"modalExpense\":\"ModalEditTransaction_modalExpense__EYONn\"};","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Datetime from 'react-datetime';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport css from './ModalEditTransaction.module.css';\r\nimport { selectCategories } from 'redux/categories/selectors';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTransaction } from 'redux/transactions/operations';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const ModalEditTransaction = ({\r\n  isOpen,\r\n  onClose,\r\n  transactionToEdit,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectCategories);\r\n\r\n  const animation = useSpring({\r\n    transform: isOpen ? 'scale(1)' : 'scale(0)',\r\n    opacity: isOpen ? 1 : 0,\r\n    visibility: isOpen ? 'visible' : 'hidden',\r\n    config: { duration: 300 },\r\n  });\r\n\r\n  const [isIncome, setIsIncome] = useState(false);\r\n  const [category, setCategory] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [comment, setComment] = useState('');\r\n  const [transactionId, setTransactionId] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (\r\n      transactionToEdit &&\r\n      transactionToEdit.data &&\r\n      transactionToEdit.data.length > 0\r\n    ) {\r\n      const transactionData = transactionToEdit.data[0];\r\n      setIsIncome(transactionData.type === 'income');\r\n      setCategory(transactionData.category?.toString() || '');\r\n      setAmount(transactionData.amount || 0);\r\n      setSelectedDate(new Date(transactionData.date || new Date()));\r\n      setComment(transactionData.comment || '');\r\n      setTransactionId(transactionData._id || null);\r\n    }\r\n\r\n    setErrors({});\r\n  }, [transactionToEdit, isOpen]);\r\n\r\n  const validate = () => {\r\n    const validationErrors = {};\r\n    if (!amount || amount <= 0 || amount > 1000000) {\r\n      validationErrors.amount = 'Positive and less than or equal to 1000000';\r\n    }\r\n    if (!selectedDate || selectedDate > new Date()) {\r\n      validationErrors.date = 'Past or present';\r\n    }\r\n    return validationErrors;\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const validationErrors = validate();\r\n    setErrors(validationErrors);\r\n\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      const updatedTransaction = {\r\n        id: transactionId,\r\n        type: isIncome ? 'income' : 'expense',\r\n        category,\r\n        amount,\r\n        date: selectedDate.toISOString(),\r\n        comment,\r\n      };\r\n\r\n      dispatch(updateTransaction(updatedTransaction))\r\n        .unwrap()\r\n        .then(() => {\r\n          onClose();\r\n          toast.success('Transaction updated successfully');\r\n        })\r\n        .catch(rejectedValueOrSerializedError => {\r\n          console.error(rejectedValueOrSerializedError);\r\n          toast.error(rejectedValueOrSerializedError);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleTypeChange = () => setIsIncome(!isIncome);\r\n  const handleCategoryChange = e => setCategory(e.target.value);\r\n  const handleAmountChange = e => setAmount(e.target.value);\r\n  const handleDateChange = newDate => {\r\n    if (newDate && newDate.isValid()) {\r\n      setSelectedDate(newDate.toDate());\r\n    } else {\r\n      setSelectedDate(new Date());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (transactionToEdit && transactionToEdit.date) {\r\n      const editDate = new Date(transactionToEdit.date);\r\n      if (!isNaN(editDate.getTime())) {\r\n        setSelectedDate(editDate);\r\n      } else {\r\n        setSelectedDate(new Date());\r\n      }\r\n    }\r\n  }, [transactionToEdit]);\r\n  const handleCommentChange = e => setComment(e.target.value);\r\n\r\n  const handleClose = e => {\r\n    if (e.target.id === 'modalBackdrop') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      window.addEventListener('keydown', handleKeyDown);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [isOpen, onClose]);\r\n\r\n  //income/expense checkbox\r\n\r\n  //calendar\r\n  const renderInput = props => {\r\n    return (\r\n      <div className={css.dateContainer} style={{ position: 'relative' }}>\r\n        <input className={css.dateInput} {...props} />\r\n        <svg\r\n          className={css.calendarIcon}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n        >\r\n          <g clipPath=\"url(#clip0_7_312)\">\r\n            <path\r\n              d=\"M9 11H7V13H9V11ZM13 11H11V13H13V11ZM17 11H15V13H17V11ZM19 4H18V2H16V4H8V2H6V4H5C3.89 4 3.01 4.9 3.01 6L3 20C3 21.1 3.89 22 5 22H19C20.1 22 21 21.1 21 20V6C21 4.9 20.1 4 19 4ZM19 20H5V9H19V20Z\"\r\n              fill=\"#4A56E2\"\r\n            />\r\n          </g>\r\n          <defs>\r\n            <clipPath id=\"clip0_7_312\">\r\n              <rect width=\"24\" height=\"24\" fill=\"white\" />\r\n            </clipPath>\r\n          </defs>\r\n        </svg>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <animated.div\r\n      style={animation}\r\n      id=\"modalBackdrop\"\r\n      className={css.modalOverlay}\r\n      onClick={handleClose}\r\n    >\r\n      <div\r\n        className={isIncome ? css.modal : `${css.modal} ${css.modalExpense}`}\r\n      >\r\n        <div className={css.modalContent}>\r\n          <button className={css.closeButton} onClick={onClose}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 18 18\"\r\n              fill=\"none\"\r\n            >\r\n              <path d=\"M1 1L17 17\" stroke=\"black\" />\r\n              <path d=\"M1 17L17 0.999999\" stroke=\"black\" />\r\n            </svg>\r\n          </button>\r\n          <p className={css.headline}>Edit Transaction</p>\r\n          <form className={css.form} onSubmit={handleSubmit}>\r\n            <label className={css.toggleButtonLabel}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={isIncome}\r\n                onChange={handleTypeChange}\r\n                className={css.toggleButtonInput}\r\n                name=\"type\"\r\n              />\r\n              <div className={css.toggleButton}>\r\n                {isIncome ? (\r\n                  <svg\r\n                    className={css.toggleButtonIncome}\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"74\"\r\n                    height=\"74\"\r\n                    viewBox=\"0 0 74 74\"\r\n                    fill=\"none\"\r\n                  >\r\n                    <g filter=\"url(#filter0_d_19664_746)\">\r\n                      <circle cx=\"37\" cy=\"31\" r=\"22\" fill=\"#24CCA7\" />\r\n                    </g>\r\n                    <path d=\"M37 21V41\" stroke=\"white\" strokeWidth=\"2\" />\r\n                    <path d=\"M27 31L47 31\" stroke=\"white\" strokeWidth=\"2\" />\r\n                    <defs>\r\n                      <filter\r\n                        id=\"filter0_d_19664_746\"\r\n                        x=\"0\"\r\n                        y=\"0\"\r\n                        width=\"74\"\r\n                        height=\"74\"\r\n                        filterUnits=\"userSpaceOnUse\"\r\n                        colorInterpolationFilters=\"sRGB\"\r\n                      >\r\n                        <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n                        <feColorMatrix\r\n                          in=\"SourceAlpha\"\r\n                          type=\"matrix\"\r\n                          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n                          result=\"hardAlpha\"\r\n                        />\r\n                        <feOffset dy=\"6\" />\r\n                        <feGaussianBlur stdDeviation=\"7.5\" />\r\n                        <feColorMatrix\r\n                          type=\"matrix\"\r\n                          values=\"0 0 0 0 0.141176 0 0 0 0 0.8 0 0 0 0 0.654902 0 0 0 0.5 0\"\r\n                        />\r\n                        <feBlend\r\n                          mode=\"normal\"\r\n                          in2=\"BackgroundImageFix\"\r\n                          result=\"effect1_dropShadow_19664_746\"\r\n                        />\r\n                        <feBlend\r\n                          mode=\"normal\"\r\n                          in=\"SourceGraphic\"\r\n                          in2=\"effect1_dropShadow_19664_746\"\r\n                          result=\"shape\"\r\n                        />\r\n                      </filter>\r\n                    </defs>\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    className={css.toggleButtonExpense}\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"74\"\r\n                    height=\"74\"\r\n                    viewBox=\"0 0 74 74\"\r\n                    fill=\"none\"\r\n                  >\r\n                    <g filter=\"url(#filter0_d_19664_1473)\">\r\n                      <circle cx=\"37\" cy=\"31\" r=\"22\" fill=\"#FF6596\" />\r\n                    </g>\r\n                    <path d=\"M27 31L47 31\" stroke=\"white\" strokeWidth=\"2\" />\r\n                    <defs>\r\n                      <filter\r\n                        id=\"filter0_d_19664_1473\"\r\n                        x=\"0\"\r\n                        y=\"0\"\r\n                        width=\"74\"\r\n                        height=\"74\"\r\n                        filterUnits=\"userSpaceOnUse\"\r\n                        colorInterpolationFilters=\"sRGB\"\r\n                      >\r\n                        <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n                        <feColorMatrix\r\n                          in=\"SourceAlpha\"\r\n                          type=\"matrix\"\r\n                          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n                          result=\"hardAlpha\"\r\n                        />\r\n                        <feOffset dy=\"6\" />\r\n                        <feGaussianBlur stdDeviation=\"7.5\" />\r\n                        <feColorMatrix\r\n                          type=\"matrix\"\r\n                          values=\"0 0 0 0 1 0 0 0 0 0.395833 0 0 0 0 0.589401 0 0 0 0.5 0\"\r\n                        />\r\n                        <feBlend\r\n                          mode=\"normal\"\r\n                          in2=\"BackgroundImageFix\"\r\n                          result=\"effect1_dropShadow_19664_1473\"\r\n                        />\r\n                        <feBlend\r\n                          mode=\"normal\"\r\n                          in=\"SourceGraphic\"\r\n                          in2=\"effect1_dropShadow_19664_1473\"\r\n                          result=\"shape\"\r\n                        />\r\n                      </filter>\r\n                    </defs>\r\n                  </svg>\r\n                )}\r\n              </div>\r\n            </label>\r\n            <div\r\n              className={\r\n                isIncome\r\n                  ? css.rangeContainer\r\n                  : `${css.rangeContainer} ${css.rangeContainerExpense}`\r\n              }\r\n            >\r\n              <span\r\n                className={\r\n                  isIncome ? css.income : `${css.income} ${css.nohighlight}`\r\n                }\r\n              >\r\n                Income\r\n              </span>\r\n\r\n              <span\r\n                className={\r\n                  isIncome ? `${css.expense} ${css.nohighlight}` : css.expense\r\n                }\r\n              >\r\n                Expense\r\n              </span>\r\n            </div>\r\n            {!isIncome ? (\r\n              <div className={css.categoryWrapper}>\r\n                <select\r\n                  className={css.category}\r\n                  name=\"category\"\r\n                  value={category}\r\n                  onChange={handleCategoryChange}\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select a category\r\n                  </option>\r\n                  {categories.slice(1).map(cat => (\r\n                    <option key={cat.id} value={cat.id}>\r\n                      {cat.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n            <label className={css.sumLabel}>\r\n              <input\r\n                className={`${css.sumInput} ${errors.amount ? css.error : ''}`}\r\n                type=\"number\"\r\n                placeholder=\"0.00\"\r\n                value={amount}\r\n                onChange={handleAmountChange}\r\n              />\r\n              {errors.amount && (\r\n                <div className={css.formikMessage}>{errors.amount}</div>\r\n              )}\r\n            </label>\r\n            <label\r\n              className={`${css.dateLabel} ${errors.date ? css.error : ''}`}\r\n            >\r\n              <Datetime\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                renderInput={renderInput}\r\n                dateFormat=\"DD-MM-YYYY\"\r\n                timeFormat={false}\r\n              />\r\n              {errors.date && (\r\n                <div className={css.formikMessageData}>{errors.date}</div>\r\n              )}\r\n            </label>\r\n            <textarea\r\n              className={css.comment}\r\n              placeholder=\"Comment\"\r\n              value={comment}\r\n              onChange={handleCommentChange}\r\n            />\r\n            <button className={css.addBtn} type=\"submit\">\r\n              SAVE\r\n            </button>\r\n            <button className={css.closeBtn} onClick={onClose} type=\"button\">\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nModalEditTransaction.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  transactionToEdit: PropTypes.object.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__uxvE+\",\"paginationLinkActive\":\"Pagination_paginationLinkActive__AOP4Z\",\"paginationLinkDisabled\":\"Pagination_paginationLinkDisabled__VXQxW\"};","import PropTypes from 'prop-types';\r\nimport ReactPaginate from 'react-paginate';\r\nimport css from './Pagination.module.css';\r\n\r\nexport const Pagination = ({\r\n  transactionsPerPage,\r\n  totalTransactions,\r\n  paginate,\r\n}) => {\r\n  const pageCount = Math.ceil(totalTransactions / transactionsPerPage);\r\n\r\n  const handlePageClick = event => {\r\n    paginate(event.selected + 1);\r\n  };\r\n\r\n  return (\r\n    <ReactPaginate\r\n      breakLabel=\"...\"\r\n      onPageChange={handlePageClick}\r\n      pageRangeDisplayed={3}\r\n      pageCount={pageCount}\r\n      previousLabel={' ← '}\r\n      nextLabel={' → '}\r\n      renderOnZeroPageCount={null}\r\n      containerClassName={css.pagination}\r\n      previousLinkClassName={css.paginationLink}\r\n      nextLinkClassName={css.paginationLink}\r\n      disabledClassName={css.paginationLinkDisabled}\r\n      activeClassName={css.paginationLinkActive}\r\n    />\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  transactionsPerPage: PropTypes.number,\r\n  totalTransactions: PropTypes.number,\r\n  paginate: PropTypes.func,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { MdEdit } from 'react-icons/md';\r\nimport styles from './HomeTab.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getAllTransactions,\r\n  deleteTransaction,\r\n} from '../../redux/transactions/operations';\r\nimport { selectAllTransactions } from '../../redux/transactions/selectors';\r\nimport { useMedia } from 'react-use';\r\n// import { nanoid } from 'nanoid';\r\nimport { ModalEditTransaction } from 'components/ModalEditTransaction/ModalEditTransaction';\r\nimport { toggleModalEditTransaction } from 'redux/global/slice';\r\nimport { selectIsModalEditTransaction } from 'redux/global/selectors';\r\nimport { getTransactionById } from 'redux/transactions/operations';\r\nimport { selectCurrentTransaction } from 'redux/transactions/selectors';\r\nimport { Pagination } from '../Pagination/Pagination';\r\nimport { getCategoryName, selectCategories } from 'redux/categories/selectors';\r\n\r\nfunction convertStringToDate(str = '2022-12-01T00:00:00.000Z') {\r\n  return str.split('T')[0].split('-').reverse().join('.');\r\n}\r\n\r\nconst tableHeadData = ['Date', 'Type', 'Category', 'Comment', 'Sum'];\r\n\r\nfunction HomeTab() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [transactionsPerPage] = useState(8);\r\n  const isMobile = useMedia('(max-width: 768px)');\r\n  const dispatch = useDispatch();\r\n  const transactions = useSelector(selectAllTransactions);\r\n  const categoriesArr = useSelector(selectCategories);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllTransactions());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    console.log(transactions); // Logging transactions\r\n  }, [transactions]);\r\n\r\n  const handleDelete = transactionId => {\r\n    dispatch(deleteTransaction(transactionId)).then(() => {\r\n      dispatch(getAllTransactions());\r\n    });\r\n  };\r\n\r\n  const isModalEditTransaction = useSelector(selectIsModalEditTransaction);\r\n  const transactionFromSelector = useSelector(selectCurrentTransaction);\r\n  if (!transactionFromSelector) {\r\n  }\r\n  if (transactionFromSelector) {\r\n  }\r\n\r\n  const transactionToEdit = transactionFromSelector || {\r\n    type: '',\r\n    category: '',\r\n    amount: '',\r\n    date: new Date(),\r\n    comment: '',\r\n  };\r\n\r\n  const handleToggleModal = transactionId => {\r\n    dispatch(toggleModalEditTransaction());\r\n    if (!isModalEditTransaction && transactionId) {\r\n      dispatch(getTransactionById(transactionId));\r\n    } else {\r\n      dispatch(getAllTransactions());\r\n    }\r\n  };\r\n\r\n  // Pagination logic\r\n  const indexOfLastTransaction = currentPage * transactionsPerPage;\r\n  const indexOfFirstTransaction = indexOfLastTransaction - transactionsPerPage;\r\n  const currentTransactions = Array.isArray(transactions)\r\n    ? transactions.slice(indexOfFirstTransaction, indexOfLastTransaction)\r\n    : [];\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  const renderDesktop = () => {\r\n    return (\r\n      <>\r\n        <table className={styles.table}>\r\n          <thead className={styles.tableHead}>\r\n            <tr className={styles.tableHeadRow}>\r\n              {tableHeadData.map(head => (\r\n                <th className={styles.tableHeadData} key={head}>\r\n                  {head}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className={styles.tableBody}>\r\n            {currentTransactions.map(item => {\r\n              const result = item.type === 'expense' ? '-' : '+';\r\n              return (\r\n                <tr key={item._id} className={styles.tableBodyRow}>\r\n                  <td className={styles.tableBodyData}>\r\n                    {convertStringToDate(item.date)}\r\n                  </td>\r\n                  <td className={styles.tableBodyData}>{result}</td>\r\n                  <td className={styles.tableBodyData}>\r\n                    {getCategoryName(item.category, categoriesArr)}\r\n                  </td>\r\n                  <td className={styles.tableBodyData}>{item.comment}</td>\r\n                  <td\r\n                    className={styles.tableBodyData}\r\n                    style={{ color: item.Expenses ? `#FF6596` : `#24CCA7` }}\r\n                  >\r\n                    {item.amount} {/* Dodanie kwoty transakcji */}\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className={styles.buttonEdit}\r\n                      onClick={() => handleToggleModal(item._id)}\r\n                    >\r\n                      <MdEdit size={24} />\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className={styles.button}\r\n                      onClick={() => handleDelete(item._id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          transactionsPerPage={transactionsPerPage}\r\n          totalTransactions={transactions.length}\r\n          paginate={paginate}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderMobile = () => {\r\n    return (\r\n      <>\r\n        {currentTransactions.map(item => {\r\n          const borderColor = item.Expenses ? '#ff6596' : '#24cca7';\r\n          const result = item.type === 'expense' ? '-' : '+';\r\n          return (\r\n            <ul\r\n              key={item._id}\r\n              className={\r\n                result === '+' ? styles.mobileListPlus : styles.mobileList\r\n              }\r\n              style={{ borderColor: borderColor }}\r\n            >\r\n              <li className={styles.mobileListItem}>\r\n                <span className={styles.mobileListCategory}>Date</span>\r\n                <span className={styles.mobileListData}>\r\n                  {convertStringToDate(item.date)}\r\n                </span>\r\n              </li>\r\n              <li className={styles.mobileListItem}>\r\n                <span className={styles.mobileListCategory}>Type</span>\r\n                <span className={styles.mobileListData}>{result}</span>\r\n              </li>\r\n              <li className={styles.mobileListItem}>\r\n                <span className={styles.mobileListCategory}>Category</span>\r\n                <span className={styles.mobileListData}>\r\n                  {getCategoryName(item.category, categoriesArr)}\r\n                </span>\r\n              </li>\r\n              <li className={styles.mobileListItem}>\r\n                <span className={styles.mobileListCategory}>Comment</span>\r\n                <span className={styles.mobileListData}>{item.comment}</span>\r\n              </li>\r\n              <li className={styles.mobileListItem}>\r\n                <span className={styles.mobileListCategory}>Sum</span>\r\n                <span\r\n                  className={\r\n                    result === '+'\r\n                      ? styles.mobileListDataPlus\r\n                      : styles.mobileListDataMinus\r\n                  }\r\n                >\r\n                  {item.amount}\r\n                </span>\r\n              </li>\r\n              <li className={styles.mobileListItem}>\r\n                <button\r\n                  className={styles.deleteButton}\r\n                  onClick={() => handleDelete(item._id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  className={styles.editButton}\r\n                  onClick={() => handleToggleModal(item._id)}\r\n                >\r\n                  <MdEdit size={18} />\r\n                  Edit\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isMobile ? renderMobile() : renderDesktop()}\r\n\r\n      <ModalEditTransaction\r\n        transactionToEdit={transactionToEdit}\r\n        isOpen={isModalEditTransaction}\r\n        onClose={() => handleToggleModal(null)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeTab;\r\n","import { Helmet } from 'react-helmet';\r\nimport { BackgroundContainer } from 'components/BackgroundContainer/BackgroundContainer';\r\nimport { NavBalanceCurrency } from 'components/NavBalanceCurrency/NavBalanceCurrency';\r\n//  import { TransactionsList } from 'components/TransactionsList/TransactionsList';\r\nimport { ButtonAddTransaction } from 'components/ButtonAddTransaction/ButtonAddTransaction';\r\nimport css from './HomePage.module.css';\r\nimport { useMediaQuery } from 'react-responsive';\r\n// import { Helper } from 'components/Helper/Helper';\r\nimport HomeTab from 'components/HomeTab/HomeTab';\r\n\r\nexport default function HomePage() {\r\n  const isMobilTablet = useMediaQuery({ maxWidth: 1279 });\r\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\r\n\r\n  let lineStyle;\r\n\r\n  if (isDesktop) {\r\n    lineStyle = ` ${css.lineDesktop}`;\r\n  } else if (isMobilTablet) {\r\n    lineStyle = ` ${css.lineMobileTablet}`;\r\n  }\r\n\r\n  return (\r\n    <BackgroundContainer>\r\n      <Helmet>\r\n        <title>Finance manager</title>\r\n      </Helmet>\r\n      <NavBalanceCurrency />\r\n      <div className={lineStyle}></div>\r\n      <HomeTab />\r\n      {/* <TransactionsList /> */}\r\n      {/* <Helper /> */}\r\n      <ButtonAddTransaction />\r\n    </BackgroundContainer>\r\n  );\r\n}\r\n","export const selectIsError = state => state.categories.isError;\r\nexport const selectCategories = state => state.categories.data;\r\n\r\nexport const getCategory = (nr, arr) => {\r\n  //   const arr = useSelector(selectCategories); <- to piszesz w komponencie i wywolujesz getCategory(twoj_nr,arr)\r\n  return arr.find(cat => cat.id === nr);\r\n};\r\n\r\nexport const getCategoryName = (nr, arr) => {\r\n  const found = Array.isArray(arr) ? arr.find(cat => cat.id === nr) : false;\r\n  return found ? (found.name ? found.name : 'Other') : 'Other';\r\n};\r\n\r\nexport const getCategoryColor = (nr, arr) => {\r\n  const found = Array.isArray(arr) ? arr.find(cat => cat.id === nr) : false;\r\n  return found\r\n    ? found.color\r\n      ? found.color\r\n      : 'CornflowerBlue'\r\n    : 'CornflowerBlue';\r\n};\r\n"],"names":["BackgroundContainer","_ref","children","isMobile","useMediaQuery","maxWidth","isTablet","minWidth","isDesktop","containerStyle","css","backgroundStyle","concat","_jsxs","className","_jsx","selectIsError","state","currency","isError","selectCurrency","data","selectLastFetchDate","lastFetchDate","Currency","dispatch","useDispatch","useSelector","useEffect","length","Date","now","fetchCurrency","_Fragment","styles","map","onClick","event","currentTarget","classList","toggle","code","bid","toFixed","ask","Balance","balance","selectBalance","console","log","displayBalance","isNaN","parseFloat","NavBalanceCurrency","getAllTransactions","currencyStyle","navBalanceStyle","Navigation","Link","styled","NavLink","_templateObject","_taggedTemplateLiteral","to","AiFillHome","BiStats","PiCurrencyDollarSimpleBold","today","todayEnd","setHours","transactionValidationSchema","Yup","amount","required","positive","max","date","type","oneOf","comment","nullable","category","ModalAddTransaction","isOpen","onClose","animation","useSpring","transform","opacity","visibility","config","duration","categories","selectCategories","isIncome","setIsIncome","useState","selectedDate","setSelectedDate","formik","useFormik","initialValues","validationSchema","onSubmit","values","_ref2","resetForm","transaction","addTransaction","unwrap","then","toast","success","catch","rejectedValueOrSerializedError","error","handleKeyDown","e","key","window","addEventListener","removeEventListener","animated","div","style","id","modalOverlay","target","modal","modalExpense","modalContent","closeButton","xmlns","width","height","viewBox","fill","d","stroke","headline","form","handleSubmit","toggleButtonLabel","checked","onChange","setFieldValue","toggleButtonInput","name","toggleButton","toggleButtonIncome","filter","cx","cy","r","strokeWidth","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","dy","stdDeviation","mode","in2","toggleButtonExpense","rangeContainer","rangeContainerExpense","income","nohighlight","expense","categoryWrapper","touched","errors","value","newCategory","onBlur","handleBlur","disabled","slice","cat","formikMessageRequired","sumLabel","sumInput","placeholder","getFieldProps","formikMessage","dateLabel","Datetime","formattedDate","toDate","renderInput","props","dateContainer","position","dateInput","calendarIcon","clipPath","dateFormat","timeFormat","formikMessageData","addBtn","closeBtn","ButtonAddTransaction","isModalAddTransaction","selectIsModalAddTransaction","handleToggleModal","toggleModalAddTransaction","button","icon","ModalEditTransaction","transactionToEdit","setCategory","setAmount","setComment","transactionId","setTransactionId","setErrors","_transactionData$cate","transactionData","toString","_id","editDate","getTime","preventDefault","validationErrors","validate","Object","keys","updatedTransaction","toISOString","updateTransaction","handleTypeChange","newDate","isValid","Pagination","transactionsPerPage","totalTransactions","paginate","pageCount","Math","ceil","ReactPaginate","breakLabel","onPageChange","selected","pageRangeDisplayed","previousLabel","nextLabel","renderOnZeroPageCount","containerClassName","pagination","previousLinkClassName","paginationLink","nextLinkClassName","disabledClassName","paginationLinkDisabled","activeClassName","paginationLinkActive","convertStringToDate","arguments","undefined","split","reverse","join","tableHeadData","currentPage","setCurrentPage","useMedia","transactions","selectAllTransactions","categoriesArr","handleDelete","deleteTransaction","isModalEditTransaction","selectIsModalEditTransaction","transactionFromSelector","selectCurrentTransaction","toggleModalEditTransaction","getTransactionById","indexOfLastTransaction","indexOfFirstTransaction","currentTransactions","Array","isArray","pageNumber","item","borderColor","Expenses","getCategoryName","MdEdit","size","head","color","HomePage","isMobilTablet","lineStyle","lineDesktop","lineMobileTablet","Helmet","HomeTab","nr","arr","found","find","getCategoryColor"],"sourceRoot":""}