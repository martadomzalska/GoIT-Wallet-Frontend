{"version":3,"file":"static/js/189.dcc4cdde.chunk.js","mappings":"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","sources":["webpack://wallet/./src/components/BackgroundContainer/BackgroundContainer.module.css?96c2","components/BackgroundContainer/BackgroundContainer.jsx","redux/currency/selectors.js","webpack://wallet/./src/components/Currency/Currency.module.scss?28ef","components/Currency/Currency.jsx","webpack://wallet/./src/components/NavBalanceCurrency/NavBalanceCurrency.module.css?9eae","webpack://wallet/./src/components/Balance/Balance.module.css?b75c","components/Balance/Balance.jsx","components/NavBalanceCurrency/NavBalanceCurrency.jsx","webpack://wallet/./src/components/Navigation/Navigation.module.css?4bf2","components/Navigation/Navigation.jsx","webpack://wallet/./src/components/Chart/Table/TableChart.module.css?7766","webpack://wallet/./src/components/Chart/Chart.module.css?6073","components/Chart/Chart.jsx","components/Chart/Table/TableChart.jsx","pages/DiagramPage/DiagramPage.jsx","redux/categories/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerAll\":\"BackgroundContainer_containerAll__VmaRx\",\"container\":\"BackgroundContainer_container__mNblx\",\"mobile\":\"BackgroundContainer_mobile__K7gPD\",\"tablet\":\"BackgroundContainer_tablet__hewMm\",\"desktop\":\"BackgroundContainer_desktop__NMoAX\",\"background\":\"BackgroundContainer_background__xUlXo\",\"backgroundTablet\":\"BackgroundContainer_backgroundTablet__Zcs5v\",\"backgroundDesktop\":\"BackgroundContainer_backgroundDesktop__5XBsB\"};","import React from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport css from './BackgroundContainer.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const BackgroundContainer = ({ children }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 768 });\r\n  const isTablet = useMediaQuery({ minWidth: 769, maxWidth: 1279 });\r\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\r\n\r\n  let containerStyle = css.container;\r\n  let backgroundStyle = css.background;\r\n\r\n  if (isDesktop) {\r\n    containerStyle += ` ${css.desktop}`;\r\n    backgroundStyle += ` ${css.backgroundDesktop}`;\r\n  } else if (isTablet) {\r\n    containerStyle += ` ${css.tablet}`;\r\n    backgroundStyle += ` ${css.backgroundTablet}`;\r\n  } else if (isMobile) {\r\n    containerStyle += ` ${css.mobile}`;\r\n  }\r\n\r\n  return (\r\n    <div className={css.containerAll}>\r\n      <div className={backgroundStyle}> </div>\r\n      <div className={containerStyle}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBackgroundContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","\r\nexport const selectIsError = state => state.currency.isError;\r\nexport const selectCurrency = state => state.currency.data;\r\nexport const selectLastFetchDate = state => state.currency.lastFetchDate;","// extracted by mini-css-extract-plugin\nexport default {\"Currency__container\":\"Currency_Currency__container__rSML5\",\"Currency__bgGraph\":\"Currency_Currency__bgGraph__WjX6U\",\"Currency__row_selected\":\"Currency_Currency__row_selected__bs+Ae\",\"Currency__spinnerContainer\":\"Currency_Currency__spinnerContainer__xhXvm\",\"Currency__spinner\":\"Currency_Currency__spinner__ma5Ew\",\"Currency__table\":\"Currency_Currency__table__kmI5h\"};","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchCurrency } from '../../redux/currency/thunk';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  selectIsError,\r\n  selectCurrency,\r\n  selectLastFetchDate,\r\n} from '../../redux/currency/selectors';\r\nimport styles from './Currency.module.scss';\r\n\r\nexport const Currency = () => {\r\n  const dispatch = useDispatch();\r\n  const currency = useSelector(selectCurrency);\r\n  const isError = useSelector(selectIsError);\r\n  const lastFetchDate = useSelector(selectLastFetchDate);\r\n\r\n  useEffect(() => {\r\n    if (!currency.length) {\r\n      dispatch(fetchCurrency());\r\n    } else {\r\n      const timeDiff = Date.now() - lastFetchDate;\r\n      if (timeDiff > 1000 * 60 * 60) {\r\n        dispatch(fetchCurrency());\r\n      }\r\n    }\r\n  }, [currency, dispatch, lastFetchDate]);\r\n\r\n  return (\r\n    <>\r\n      {isError && <p>{isError[0]}</p>}\r\n      <div className={styles.Currency__container}>\r\n        <div className={styles.Currency__bgGraph} />\r\n        \r\n        {!isError && (\r\n          <table className={styles.Currency__table}>\r\n            <thead>\r\n              <tr>\r\n                <th>Currency</th>\r\n                <th data-type=\"bid\">Purchase</th>\r\n                <th data-type=\"ask\">Sale</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {currency?.map(currency => (\r\n                <tr\r\n                  key={currency.code}\r\n                  onClick={event =>\r\n                    event.currentTarget.classList.toggle(\r\n                      styles.Currency__row_selected\r\n                    )\r\n                  }\r\n                >\r\n                  <td>{currency.code}</td>\r\n                  <td data-type=\"bid\">{currency.bid.toFixed(4)}</td>\r\n                  <td data-type=\"ask\">{currency.ask.toFixed(4)}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NavBalanceCurrency_container__260j2\",\"desktop\":\"NavBalanceCurrency_desktop__j129s\",\"tablet\":\"NavBalanceCurrency_tablet__YlQLF\",\"mobile\":\"NavBalanceCurrency_mobile__rvPk4\",\"navBalance\":\"NavBalanceCurrency_navBalance__f02Rj\",\"navBalanceMobile\":\"NavBalanceCurrency_navBalanceMobile__YgFF8\",\"navBalanceTablet\":\"NavBalanceCurrency_navBalanceTablet__pYFHG\",\"navBalanceDesktop\":\"NavBalanceCurrency_navBalanceDesktop__laBeQ\",\"currencyTablet\":\"NavBalanceCurrency_currencyTablet__CPr-R\",\"currencyMobile\":\"NavBalanceCurrency_currencyMobile__ub1vh\"};","// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__kAwRX\",\"balance__text\":\"Balance_balance__text__pUfL6\",\"balance__amount\":\"Balance_balance__amount__FOH9a\",\"balance__currency\":\"Balance_balance__currency__Oy+dn\"};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectBalance } from '../../redux/transactions/selectors';\r\nimport styles from './Balance.module.css';\r\n\r\nexport function Balance() {\r\n  const balance = useSelector(selectBalance);\r\n  console.log('Balance from selector:', balance);\r\n  const displayBalance = !isNaN(parseFloat(balance))\r\n    ? parseFloat(balance).toFixed(2)\r\n    : '0.00';\r\n\r\n  return (\r\n    <div className={styles.balance}>\r\n      <div className={styles.balance__text}>Your balance</div>\r\n      <div className={styles.balance__amount}>\r\n        <span className={styles.balance__currency}>PLN</span>\r\n        {displayBalance}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllTransactions } from 'redux/transactions/operations';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport css from './NavBalanceCurrency.module.css';\r\nimport { Navigation } from 'components/Navigation/Navigation';\r\nimport { Currency } from 'components/Currency/Currency';\r\nimport { Balance } from 'components/Balance/Balance';\r\n\r\nexport const NavBalanceCurrency = () => {\r\n  const isMobile = useMediaQuery({ maxWidth: 768 });\r\n  const isTablet = useMediaQuery({ minWidth: 769, maxWidth: 1279 });\r\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllTransactions());\r\n  }, [dispatch]);\r\n\r\n  let containerStyle = css.container;\r\n  let navBalanceStyle = css.navBalance;\r\n  let currencyStyle;\r\n\r\n  if (isDesktop) {\r\n    containerStyle += ` ${css.desktop}`;\r\n    navBalanceStyle += ` ${css.navBalanceDesktop}`;\r\n  } else if (isTablet) {\r\n    containerStyle += ` ${css.tablet}`;\r\n    navBalanceStyle += ` ${css.navBalanceTablet}`;\r\n    currencyStyle = ` ${css.currencyTablet}`;\r\n  } else if (isMobile) {\r\n    containerStyle += ` ${css.mobile}`;\r\n    currencyStyle = ` ${css.currencyMobile}`;\r\n    navBalanceStyle += ` ${css.navBalanceMobile}`;\r\n  }\r\n  return (\r\n    <div className={containerStyle}>\r\n      <div className={navBalanceStyle}>\r\n        <Navigation />\r\n        <Balance />\r\n      </div>\r\n      <div className={currencyStyle}>\r\n        <Currency />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"navigation\":\"Navigation_navigation__+DN70\",\"navigation__item\":\"Navigation_navigation__item__9ATd9\",\"navigation__icon_display\":\"Navigation_navigation__icon_display__QHIaH\",\"navigation__item_currency\":\"Navigation_navigation__item_currency__TzfYt\",\"navigation__item_home\":\"Navigation_navigation__item_home__sBTN6\",\"navigation__item_stats\":\"Navigation_navigation__item_stats__vmVq3\",\"navigation__item_blue\":\"Navigation_navigation__item_blue__wdfv6\"};","import { AiFillHome } from 'react-icons/ai';\r\nimport { BiStats } from 'react-icons/bi';\r\nimport { PiCurrencyDollarSimpleBold } from 'react-icons/pi';\r\nimport styled from 'styled-components';\r\nimport styles from './Navigation.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Link = styled(NavLink)`\r\n  &.active {\r\n    font-weight: 700;\r\n\r\n    div div {\r\n      background-color: #4a56e2;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Navigation = () => {\r\n  return (\r\n    <div className={styles.navigation}>\r\n      <Link to=\"/home\">\r\n        <div className={styles.navigation__icon_display}>\r\n          <div className={styles.navigation__item}>\r\n            <AiFillHome />\r\n          </div>\r\n          <div className={styles.navigation__item_home}>Home</div>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/diagram\">\r\n        <div className={styles.navigation__icon_display}>\r\n          <div className={styles.navigation__item}>\r\n            <BiStats />\r\n          </div>\r\n          <div className={styles.navigation__item_stats}>Statistics</div>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/currency\">\r\n        <div>\r\n          <div className={styles.navigation__item_currency}>\r\n            <PiCurrencyDollarSimpleBold />\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dateBox\":\"TableChart_dateBox__Q+u2s\",\"selectMonth\":\"TableChart_selectMonth__NxCzo\",\"selectYear\":\"TableChart_selectYear__sblX3\",\"statisticsList\":\"TableChart_statisticsList__OKx-j\",\"header\":\"TableChart_header__cyEzS\",\"headerItem\":\"TableChart_headerItem__t5vzt\",\"results\":\"TableChart_results__Qc-Wp\",\"listItemWrap\":\"TableChart_listItemWrap__sQGOB\",\"colorBox\":\"TableChart_colorBox__d58Z3\",\"list\":\"TableChart_list__42mV+\",\"listItem\":\"TableChart_listItem__QnFBm\",\"category\":\"TableChart_category__ZlQMh\",\"resultsWrap\":\"TableChart_resultsWrap__ES2aa\",\"resultsTitle\":\"TableChart_resultsTitle__SUTND\",\"resultsExpenses\":\"TableChart_resultsExpenses__nbeNb\",\"resultsIncome\":\"TableChart_resultsIncome__29LTE\",\"containerChart\":\"TableChart_containerChart__KLk8x\",\"diagramWrap\":\"TableChart_diagramWrap__jqAc4\",\"diagramTitle\":\"TableChart_diagramTitle__+wPbS\"};","// extracted by mini-css-extract-plugin\nexport default {\"doughnut\":\"Chart_doughnut__v7IMz\",\"balance\":\"Chart_balance__SEQo8\"};","import css from './Chart.module.css';\r\n// import { selectUserToken } from '../../redux/user/userSelectors';\r\n// import { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Colors,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { BACKEND_BASE_URL } from 'redux/global/constants';\r\nimport { selectCategories } from 'redux/categories/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectBalance } from 'redux/transactions/selectors';\r\n\r\naxios.defaults.baseURL = BACKEND_BASE_URL;\r\n\r\nChartJS.register(ArcElement, Tooltip, Colors, Legend);\r\n\r\nconst Chart = ({ transactions }) => {\r\n  const categoriesArr = useSelector(selectCategories);\r\n  const balance = useSelector(selectBalance);\r\n  const displayBalance = !isNaN(parseFloat(balance))\r\n    ? parseFloat(balance).toFixed(2)\r\n    : '0.00';\r\n  const incomeNr = categoriesArr.find(cat => cat.name === 'Income').id;\r\n  const makeChartArr = data => {\r\n    // console.log(`Chart makeChartArr data:`, data);\r\n    let dataArr = [];\r\n    data.forEach(tr => {\r\n      if (tr.type === 'income') {\r\n        if (dataArr[incomeNr] && dataArr[incomeNr].amount) {\r\n          dataArr[incomeNr].amount += tr.amount;\r\n        } else {\r\n          dataArr[incomeNr] = { ...tr, category: incomeNr };\r\n        }\r\n      } else {\r\n        dataArr[tr.category] = {\r\n          ...tr,\r\n          amount:\r\n            (dataArr[tr.category] && dataArr[tr.category].amount\r\n              ? dataArr[tr.category].amount\r\n              : 0) + tr.amount,\r\n        };\r\n      }\r\n    });\r\n    //slicing off empty array cells\r\n    for (let index = dataArr.length - 1; index > 0; index--) {\r\n      if (dataArr[index] == null) {\r\n        // console.log(`dataArr before slice [${index}]`, dataArr);\r\n        dataArr = dataArr\r\n          .slice(0, index)\r\n          .concat(dataArr.slice(index + 1, dataArr.length));\r\n        // console.log(`dataArr after slice [${index}]`, dataArr);\r\n      }\r\n    }\r\n    return dataArr;\r\n  };\r\n  // const chartArr = makeChartArr(transactions);\r\n  const chartArr =\r\n    Array.isArray(transactions) && transactions.length > 0\r\n      ? makeChartArr(transactions)\r\n      : [];\r\n\r\n  //category colors\r\n  const makePalette = () => {\r\n    const paletteArray = categoriesArr.map(cat => {\r\n      return { [cat.id]: cat.color };\r\n    });\r\n    const palette = Object.assign({}, ...paletteArray);\r\n    return palette;\r\n  };\r\n  const allColors = makePalette();\r\n  // category names\r\n  const makeNames = () => {\r\n    const namesArray = categoriesArr.map(cat => {\r\n      return { [cat.id]: cat.name };\r\n    });\r\n    const names = Object.assign({}, ...namesArray);\r\n    return names;\r\n  };\r\n  const allNames = makeNames();\r\n\r\n  // !(Array.isArray(chartArr))? [] :\r\n  const categories = chartArr.map(item => allNames[item.category]);\r\n  const values = chartArr.map(item => item.amount);\r\n  const colors = chartArr.map(item => allColors[item.category]);\r\n\r\n  const data = {\r\n    labels: categories,\r\n    datasets: [\r\n      {\r\n        label: 'Sum',\r\n        data: values,\r\n        backgroundColor: colors,\r\n        borderWidth: 1,\r\n        borderColor: ['transparent'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const textCenter = {\r\n    id: 'textCenter',\r\n    beforeDatasetsDraw(chart) {\r\n      const { ctx } = chart;\r\n\r\n      ctx.font = 'bold 18px arial';\r\n      ctx.fillStyle = '#000000';\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'middle';\r\n      //ctx.fillText(\"jakis text\");\r\n      ctx.save();\r\n    },\r\n  };\r\n\r\n  const options = {\r\n    cutout: '65%',\r\n    plugins: {\r\n      colors: {\r\n        forceOverride: false,\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={css.doughnut}>\r\n      <Doughnut data={data} options={options} plugins={[textCenter]}></Doughnut>\r\n      {balance !== null && <p className={css.balance}>$ {displayBalance}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nChart.propTypes = {\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Chart;\r\n","import { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { useDispatch } from 'react-redux';\r\nimport css from './TableChart.module.css';\r\nimport Chart from '../Chart';\r\nimport { nanoid } from 'nanoid';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  getCategoryColor,\r\n  getCategoryName,\r\n  selectCategories,\r\n} from 'redux/categories/selectors';\r\nimport {\r\n  selectAllTransactions,\r\n  selectBalance,\r\n  selectExpense,\r\n  selectIncome,\r\n} from 'redux/transactions/selectors';\r\n\r\nconst monthToNumber = {\r\n  January: '01',\r\n  February: '02',\r\n  March: '03',\r\n  April: '04',\r\n  May: '05',\r\n  June: '06',\r\n  July: '07',\r\n  August: '08',\r\n  September: '09',\r\n  October: '10',\r\n  November: '11',\r\n  December: '12',\r\n};\r\n\r\nconst TableChart = () => {\r\n  const categoriesArr = useSelector(selectCategories);\r\n  const allTransactions = useSelector(selectAllTransactions);\r\n  const balance = useSelector(selectBalance);\r\n  const dataIncome = useSelector(selectIncome);\r\n  const dataExpenses = useSelector(selectExpense);\r\n  const moneyFormat = number =>\r\n    !isNaN(parseFloat(number)) ? parseFloat(number).toFixed(2) : '0.00';\r\n  // eslint-disable-next-line no-unused-vars\r\n  const displayBalance = moneyFormat(balance);\r\n\r\n  const incomeNr = categoriesArr.find(cat => cat.name === 'Income').id;\r\n  const makeChartArr = data => {\r\n    // console.log(`TableChart makeChartArr data:`, data);\r\n    let dataArr = [];\r\n    data.forEach(tr => {\r\n      if (tr.type === 'income') {\r\n        if (dataArr[incomeNr] && dataArr[incomeNr].amount) {\r\n          dataArr[incomeNr].amount += tr.amount;\r\n        } else {\r\n          dataArr[incomeNr] = { ...tr, category: incomeNr };\r\n        }\r\n      } else {\r\n        dataArr[tr.category] = {\r\n          ...tr,\r\n          amount:\r\n            (dataArr[tr.category] && dataArr[tr.category].amount\r\n              ? dataArr[tr.category].amount\r\n              : 0) + tr.amount,\r\n        };\r\n      }\r\n    });\r\n    return dataArr;\r\n  };\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState(\r\n    (new Date().getMonth() + 1).toString().padStart(2, '0')\r\n  );\r\n  const [selectedYear, setSelectedYear] = useState(\r\n    new Date().getFullYear().toString()\r\n  );\r\n\r\n  const filterTransactionsByDate = (transactions, year, month) => {\r\n    return transactions.filter(tr => {\r\n      const transactionDate = new Date(tr.date);\r\n      return (\r\n        transactionDate.getFullYear().toString() === year &&\r\n        (transactionDate.getMonth() + 1).toString().padStart(2, '0') === month\r\n      );\r\n    });\r\n  };\r\n\r\n  const filteredTransactions = filterTransactionsByDate(\r\n    allTransactions,\r\n    selectedYear,\r\n    selectedMonth\r\n  );\r\n\r\n  const chartArr =\r\n    Array.isArray(filteredTransactions) && filteredTransactions.length > 0\r\n      ? makeChartArr(filteredTransactions)\r\n      : [];\r\n\r\n  const handleMonthChange = event => {\r\n    const selectedMonthNumber = event.target.value;\r\n    setSelectedMonth(selectedMonthNumber);\r\n  };\r\n\r\n  const handleYearChange = event => {\r\n    setSelectedYear(event.target.value);\r\n  };\r\n\r\n  const dataStatsArr = [];\r\n\r\n  for (const obj in chartArr) {\r\n    dataStatsArr.push(chartArr[obj]);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  // \tconst data = { selectedMonth: selectedMonth, selectedYear };\r\n\r\n  // \tdispatch(getTransactions(data));\r\n  // }, [dispatch, selectedMonth, selectedYear]);\r\n\r\n  return (\r\n    <div className={css.containerChart}>\r\n      <p className={css.diagramTitle}>Statistics</p>\r\n      <div className={css.diagramWrap}>\r\n        <Chart transactions={filteredTransactions} />\r\n        <div className={css.chartWrap}>\r\n          <div className={css.tableWra}>\r\n            <div className={css.dateBox}>\r\n              <div className={css.month}>\r\n                <select\r\n                  className={css.selectMonth}\r\n                  value={selectedMonth}\r\n                  onChange={handleMonthChange}\r\n                >\r\n                  {Object.keys(monthToNumber).map(month => (\r\n                    <option key={month} value={monthToNumber[month]}>\r\n                      {month}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <select\r\n                className={css.selectYear}\r\n                value={selectedYear}\r\n                onChange={handleYearChange}\r\n              >\r\n                {['2020', '2021', '2022', '2023', '2024', '2025', '2026'].map(\r\n                  year => (\r\n                    <option key={year} value={year}>\r\n                      {year}\r\n                    </option>\r\n                  )\r\n                )}\r\n              </select>\r\n            </div>\r\n            <div className={css.statisticsList}>\r\n              <div className={css.header}>\r\n                <div className={css.headerItem}>Category</div>\r\n                <div className={css.headerItem}>Sum</div>\r\n              </div>\r\n\r\n              {dataStatsArr.map(({ category, color, amount }) => (\r\n                <ul className={css.list} key={nanoid()}>\r\n                  <li className={css.listItem}>\r\n                    <div className={css.listItemWrap}>\r\n                      <div\r\n                        className={css.colorBox}\r\n                        style={{\r\n                          backgroundColor: getCategoryColor(\r\n                            category,\r\n                            categoriesArr\r\n                          ),\r\n                        }}\r\n                      ></div>\r\n                      <p className={css.category}>\r\n                        {getCategoryName(category, categoriesArr)}\r\n                      </p>\r\n                    </div>\r\n                    <p>{moneyFormat(amount)}</p>\r\n                  </li>\r\n                </ul>\r\n              ))}\r\n\r\n              <div className={css.resultsWrap}>\r\n                <div className={css.results}>\r\n                  <p className={css.resultsTitle}>Expenses:</p>\r\n                  <p className={css.resultsExpenses}>\r\n                    {moneyFormat(dataExpenses)}\r\n                  </p>\r\n                </div>\r\n                <div className={css.results}>\r\n                  <p className={css.resultsTitle}>Income:</p>\r\n                  <p className={css.resultsIncome}>{moneyFormat(dataIncome)}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// TableChart.propTypes = {\r\n//   dataToRender: PropTypes.shape({\r\n//     stats: PropTypes.arrayOf(\r\n//       PropTypes.shape({\r\n//         category: PropTypes.string.isRequired,\r\n//         total: PropTypes.number.isRequired,\r\n//         color: PropTypes.string.isRequired,\r\n//       })\r\n//     ).isRequired,\r\n//     expenses: PropTypes.number.isRequired,\r\n//     income: PropTypes.number.isRequired,\r\n//   }).isRequired,\r\n// };\r\n\r\nexport default TableChart;\r\n","import { Helmet } from 'react-helmet';\r\nimport { BackgroundContainer } from 'components/BackgroundContainer/BackgroundContainer';\r\nimport { NavBalanceCurrency } from 'components/NavBalanceCurrency/NavBalanceCurrency';\r\n\r\nimport TableChart from 'components/Chart/Table/TableChart';\r\n\r\nexport default function DiagramPage() {\r\n  return (\r\n    <BackgroundContainer>\r\n      <Helmet>\r\n        <title>Statistics</title>\r\n      </Helmet>\r\n      <NavBalanceCurrency />\r\n\r\n      <TableChart />\r\n    </BackgroundContainer>\r\n  );\r\n}\r\n","export const selectIsError = state => state.categories.isError;\r\nexport const selectCategories = state => state.categories.data;\r\n\r\nexport const getCategory = (nr, arr) => {\r\n  //   const arr = useSelector(selectCategories); <- to piszesz w komponencie i wywolujesz getCategory(twoj_nr,arr)\r\n  return arr.find(cat => cat.id === nr);\r\n};\r\n\r\nexport const getCategoryName = (nr, arr) => {\r\n  const found = Array.isArray(arr) ? arr.find(cat => cat.id === nr) : false;\r\n  return found ? (found.name ? found.name : 'Other') : 'Other';\r\n};\r\n\r\nexport const getCategoryColor = (nr, arr) => {\r\n  const found = Array.isArray(arr) ? arr.find(cat => cat.id === nr) : false;\r\n  return found\r\n    ? found.color\r\n      ? found.color\r\n      : 'CornflowerBlue'\r\n    : 'CornflowerBlue';\r\n};\r\n"],"names":["BackgroundContainer","_ref","children","isMobile","useMediaQuery","maxWidth","isTablet","minWidth","isDesktop","containerStyle","css","backgroundStyle","concat","_jsxs","className","_jsx","selectIsError","state","currency","isError","selectCurrency","data","selectLastFetchDate","lastFetchDate","Currency","dispatch","useDispatch","useSelector","useEffect","length","Date","now","fetchCurrency","_Fragment","styles","map","onClick","event","currentTarget","classList","toggle","code","bid","toFixed","ask","Balance","balance","selectBalance","console","log","displayBalance","isNaN","parseFloat","NavBalanceCurrency","getAllTransactions","currencyStyle","navBalanceStyle","Navigation","Link","styled","NavLink","_templateObject","_taggedTemplateLiteral","to","AiFillHome","BiStats","PiCurrencyDollarSimpleBold","axios","defaults","baseURL","BACKEND_BASE_URL","ChartJS","register","ArcElement","Tooltip","Colors","Legend","transactions","categoriesArr","selectCategories","incomeNr","find","cat","name","id","chartArr","Array","isArray","dataArr","forEach","tr","type","amount","category","index","slice","makeChartArr","allColors","makePalette","paletteArray","color","Object","assign","allNames","makeNames","namesArray","labels","item","datasets","label","backgroundColor","borderWidth","borderColor","textCenter","beforeDatasetsDraw","chart","ctx","font","fillStyle","textAlign","textBaseline","save","Doughnut","options","cutout","plugins","colors","forceOverride","legend","display","monthToNumber","January","February","March","April","May","June","July","August","September","October","November","December","TableChart","allTransactions","selectAllTransactions","dataIncome","selectIncome","dataExpenses","selectExpense","moneyFormat","number","selectedMonth","setSelectedMonth","useState","getMonth","toString","padStart","selectedYear","setSelectedYear","getFullYear","filteredTransactions","year","month","filter","transactionDate","date","filterTransactionsByDate","dataStatsArr","obj","push","containerChart","diagramTitle","diagramWrap","Chart","chartWrap","tableWra","dateBox","selectMonth","value","onChange","selectedMonthNumber","target","keys","selectYear","statisticsList","header","headerItem","list","listItem","listItemWrap","colorBox","style","getCategoryColor","getCategoryName","nanoid","resultsWrap","results","resultsTitle","resultsExpenses","resultsIncome","DiagramPage","Helmet","categories","nr","arr","found"],"sourceRoot":""}